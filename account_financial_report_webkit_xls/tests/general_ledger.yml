-
  In order to test the Excel General Ledger webkit wizard I will print report with default setting
-
    !python {model: account.account}: |
        ctx={'xls_export':1}
        data_dict = {'chart_account_id':ref('account.chart0')}
        ctx.update({'model': 'account.account','active_ids':[ref('account.chart0')],'active_id':ref('account.chart0')})
        from openerp.tools import test_reports
        test_reports.try_report_action(cr, uid, 'account_financial_report_webkit.action_account_general_ledger_menu_webkit',wiz_data=data_dict, context=ctx,  wiz_buttons='xls_export',our_module='account_financial_report_webkit_xls')

-
  In order to test the Excel General Ledger webkit wizard I will print report with posted move
-
    !python {model: account.account}: |
        ctx={'xls_export':1}
        data_dict = {'chart_account_id':ref('account.chart0'), 'target_move': 'posted'}
        ctx.update({'model': 'account.account','active_ids':[ref('account.chart0')],'active_id':ref('account.chart0')})
        from openerp.tools import test_reports
        test_reports.try_report_action(cr, uid, 'account_financial_report_webkit.action_account_general_ledger_menu_webkit',wiz_data=data_dict, context=ctx,  wiz_buttons='xls_export',our_module='account_financial_report_webkit_xls')

-
  In order to test the Excel General Ledger webkit wizard I will print report with transactions or non zero balance
-
    !python {model: account.account}: |
        ctx={'xls_export':1}
        data_dict = {'chart_account_id':ref('account.chart0'), 'display_account': 'bal_mix'}
        ctx.update({'model': 'account.account','active_ids':[ref('account.chart0')],'active_id':ref('account.chart0')})
        from openerp.tools import test_reports
        test_reports.try_report_action(cr, uid, 'account_financial_report_webkit.action_account_general_ledger_menu_webkit',wiz_data=data_dict, context=ctx,  wiz_buttons='xls_export',our_module='account_financial_report_webkit_xls')
        
-
  In order to test the Excel General Ledger webkit wizard I will print report with inital balance and currency ammount
-
    !python {model: account.account}: |
        ctx={'xls_export':1}
        data_dict = {'chart_account_id':ref('account.chart0'), 'amount_currency': 1}
        ctx.update({'model': 'account.account','active_ids':[ref('account.chart0')],'active_id':ref('account.chart0')})
        from openerp.tools import test_reports
        test_reports.try_report_action(cr, uid, 'account_financial_report_webkit.action_account_general_ledger_menu_webkit',wiz_data=data_dict, context=ctx,  wiz_buttons='xls_export',our_module='account_financial_report_webkit_xls')

#Filter by date 
-
  In order to test the Excel General Ledger webkit wizard I will print report with inital balance and currency ammount and I filter by date of the first tree month
-
    !python {model: account.account}: |
        from datetime import datetime
        ctx={'xls_export':1}
        data_dict = {'chart_account_id':ref('account.chart0'),'amount_currency': 1, 'chart_account_id': 1, 'date_from': '%s-01-01' %(datetime.now().year), 
                     'date_to':'%s-04-01' %(datetime.now().year), 'display_account': 'bal_all', 'filter': 'filter_date',}
        ctx.update({'model': 'account.account','active_ids':[ref('account.chart0')],'active_id':ref('account.chart0')})
        from openerp.tools import test_reports
        test_reports.try_report_action(cr, uid, 'account_financial_report_webkit.action_account_general_ledger_menu_webkit',wiz_data=data_dict, context=ctx,  wiz_buttons='xls_export',our_module='account_financial_report_webkit_xls')

-
    In order to test the Excel General Ledger webkit wizard I will print report with inital balance and currency ammount and I filter by date of the first tree month
-
    !python {model: account.account}: |
        from datetime import datetime
        ctx={'xls_export':1}
        data_dict = {'chart_account_id':ref('account.chart0'),'amount_currency': 1, 'chart_account_id': 1, 'date_from': '%s-01-01' %(datetime.now().year), 
                     'date_to':'%s-04-01' %(datetime.now().year), 'display_account': 'bal_all', 'filter': 'filter_date',}
        ctx.update({'model': 'account.account','active_ids':[ref('account.chart0')],'active_id':ref('account.chart0')})
        from openerp.tools import test_reports
        test_reports.try_report_action(cr, uid, 'account_financial_report_webkit.action_account_general_ledger_menu_webkit',wiz_data=data_dict, context=ctx,  wiz_buttons='xls_export',our_module='account_financial_report_webkit_xls')
# I still have to parse report content but for this I need accounting data on multiple exercises and faor all fiscal year
